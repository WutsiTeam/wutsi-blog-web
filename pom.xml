<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.7.1</version>
  </parent>

  <groupId>com.wutsi</groupId>
  <artifactId>wutsi-blog-web</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <jacoco.threshold.line>0.74</jacoco.threshold.line>
    <jacoco.threshold.class>0.74</jacoco.threshold.class>
    <jacoco.version>0.8.8</jacoco.version>
    <java.version>11</java.version>

    <!-- Library versions - in ALPHABETICAL ORDER-->
    <commons-io.version>2.9.0</commons-io.version>
    <jaxb.version>2.3.3</jaxb.version>
    <junit.version>5.8.2</junit.version>
    <klint.version>0.46.1</klint.version>
    <kotlin.version>1.7.10</kotlin.version>
    <kotlin-mockito.version>2.2.0</kotlin-mockito.version>
    <libphonenumber.version>8.12.51</libphonenumber.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    <mobiledetect.version>1.1.1</mobiledetect.version>
    <mockito-kotlin.version>0.9.0</mockito-kotlin.version>
    <mockito-junit-jupiter.version>4.5.1</mockito-junit-jupiter.version>
    <rome.version>1.18.0</rome.version>
    <scribe.version>6.7.0</scribe.version>
    <selenium.version>3.141.59</selenium.version>
    <wiremock.version>1.58</wiremock.version>

    <wutsi-blog-client.version>2.0.1</wutsi-blog-client.version>
    <wutsi-core.version>2.0.4</wutsi-core.version>
    <wutsi-platform.version>2.0.2</wutsi-platform.version>
    <wutsi-core-aws.version>1.12.0</wutsi-core-aws.version>
    <wutsi-extractor.version>1.15.1</wutsi-extractor.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.wutsi</groupId>
      <artifactId>wutsi-blog-client</artifactId>
      <version>${wutsi-blog-client.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.wutsi</groupId>
          <artifactId>wutsi-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.wutsi</groupId>
      <artifactId>wutsi-core</artifactId>
      <version>${wutsi-core.version}</version>
    </dependency>
    <dependency>
      <groupId>com.wutsi</groupId>
      <artifactId>wutsi-core-aws</artifactId>
      <version>${wutsi-core-aws.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.wutsi</groupId>
          <artifactId>wutsi-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.wutsi</groupId>
      <artifactId>wutsi-extractor</artifactId>
      <version>${wutsi-extractor.version}</version>
    </dependency>

    <dependency>
      <groupId>com.wutsi.platform</groupId>
      <artifactId>wutsi-platform</artifactId>
      <version>${wutsi-platform.version}</version>
    </dependency>

    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>${jaxb.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${jaxb.version}</version>
      <scope>runtime</scope>
    </dependency>

    <!-- KOTLIN -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib-jdk8</artifactId>
      <version>${kotlin.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-reflect</artifactId>
      <version>${kotlin.version}</version>
    </dependency>

    <!-- Junit -->
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-test-junit5</artifactId>
      <version>${kotlin.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito-junit-jupiter.version}</version>
      <scope>test</scope>
    </dependency>


    <!-- SOCIAL -->
    <dependency>
      <groupId>com.github.scribejava</groupId>
      <artifactId>scribejava-apis</artifactId>
      <version>${scribe.version}</version>
    </dependency>

    <!-- SPRING -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.nhaarman.mockitokotlin2</groupId>
      <artifactId>mockito-kotlin</artifactId>
      <version>${kotlin-mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- COMMONS -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.libphonenumber</groupId>
      <artifactId>libphonenumber</artifactId>
      <version>${libphonenumber.version}</version>
    </dependency>
    <dependency>
      <groupId>com.rometools</groupId>
      <artifactId>rome</artifactId>
      <version>${rome.version}</version>
    </dependency>
    <dependency>
      <groupId>au.com.flyingkite</groupId>
      <artifactId>mobiledetect</artifactId>
      <version>${mobiledetect.version}</version>
    </dependency>

    <!-- Selenium -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <id>maven</id>
      <name>maven</name>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/wutsi/*</url>
    </repository>
  </repositories>

  <build>
    <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
    <finalName>${project.artifactId}</finalName>

    <plugins>
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <configuration>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <artifactId>kotlin-maven-plugin</artifactId>
        <groupId>org.jetbrains.kotlin</groupId>
        <version>${kotlin.version}</version>
        <configuration>
          <compilerPlugins>
            <plugin>spring</plugin>
          </compilerPlugins>
          <jvmTarget>${java.version}</jvmTarget>
        </configuration>

        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-allopen</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
          <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-noarg</artifactId>
            <version>${kotlin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <executions>
          <!-- Replacing default-compile as it is treated specially by maven -->
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <!-- Replacing default-testCompile as it is treated specially by maven -->
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>java-compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>java-test-compile</id>
            <phase>test-compile</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>check</id>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <rule implementation="org.jacoco.maven.RuleConfiguration">
              <element>BUNDLE</element>
              <limits>
                <limit>
                  <counter>LINE</counter>
                  <value>COVEREDRATIO</value>
                  <minimum>${jacoco.threshold.line}</minimum>
                </limit>
                <limit>
                  <counter>CLASS</counter>
                  <value>COVEREDRATIO</value>
                  <minimum>${jacoco.threshold.class}</minimum>
                </limit>
              </limits>
            </rule>
          </rules>
        </configuration>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <id>ktlint</id>
            <phase>validate</phase>
            <configuration>
              <target name="ktlint">
                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                      classname="com.pinterest.ktlint.Main"
                      classpathref="maven.plugin.classpath">
                  <arg value="src/**/*.kt"/>
                  <!-- to generate report in checkstyle format prepend following args: -->
                  <arg value="--reporter=plain"/>
                  <arg value="--reporter=checkstyle,output=${project.build.directory}/ktlint.xml"/>

                  <!-- see https://github.com/pinterest/ktlint#usage for more -->
                </java>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>ktlint-format</id>
            <configuration>
              <target name="ktlint">
                <java taskname="ktlint" dir="${basedir}" fork="true" failonerror="true"
                      classname="com.pinterest.ktlint.Main" classpathref="maven.plugin.classpath">
                  <arg value="-F"/>
                  <arg value="src/**/*.kt"/>
                </java>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.pinterest</groupId>
            <artifactId>ktlint</artifactId>
            <version>${klint.version}</version>
          </dependency>
          <!-- additional 3rd party ruleset(s) can be specified here -->
        </dependencies>
      </plugin>

      <!-- JS minification -->
      <plugin>
        <groupId>com.github.blutorange</groupId>
        <artifactId>closure-compiler-maven-plugin</artifactId>
        <version>2.21.0</version>
        <configuration>
          <baseSourceDir>${project.basedir}/src/main/resources</baseSourceDir>
          <baseTargetDir>${project.build.directory}/classes</baseTargetDir>
        </configuration>
        <executions>
          <execution>
            <id>default-minify</id>
            <phase>prepare-package</phase>
            <configuration>
              <encoding>UTF-8</encoding>
              <force>true</force>
              <sourceDir>public/assets/wutsi</sourceDir>
              <targetDir>public/assets/wutsi</targetDir>
              <outputFilename>#{path}/#{basename}.#{extension}</outputFilename>
              <includes>**/*.js</includes>
              <excludes>**/*.min.js</excludes>
              <skipMerge>true</skipMerge>
              <closureLanguageOut>ECMASCRIPT5</closureLanguageOut>
            </configuration>
            <goals>
              <goal>minify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- CSS minification -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <version>1.5.1</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>compress</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <force>true</force>
          <nosuffix>true</nosuffix>
          <includes>**/*.css</includes>
          <excludes>**/*.min.css</excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
